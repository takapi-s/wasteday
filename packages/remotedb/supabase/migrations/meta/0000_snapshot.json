{
  "id": "29c697f6-da83-4438-99ff-a77363d3906a",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.browsing_sessions": {
      "name": "browsing_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "device_id": {
          "name": "device_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "domain": {
          "name": "domain",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "start_time": {
          "name": "start_time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "duration_seconds": {
          "name": "duration_seconds",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "category_id": {
          "name": "category_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "tab_id": {
          "name": "tab_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "browsing_sessions_tenant_user_start_time_idx": {
          "name": "browsing_sessions_tenant_user_start_time_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "start_time",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "browsing_sessions_tenant_user_domain_idx": {
          "name": "browsing_sessions_tenant_user_domain_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "domain",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "browsing_sessions_device_id_idx": {
          "name": "browsing_sessions_device_id_idx",
          "columns": [
            {
              "expression": "device_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "browsing_sessions_domain_idx": {
          "name": "browsing_sessions_domain_idx",
          "columns": [
            {
              "expression": "domain",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "browsing_sessions_category_id_idx": {
          "name": "browsing_sessions_category_id_idx",
          "columns": [
            {
              "expression": "category_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "browsing_sessions_tenant_id_tenants_id_fk": {
          "name": "browsing_sessions_tenant_id_tenants_id_fk",
          "tableFrom": "browsing_sessions",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "browsing_sessions_user_id_users_id_fk": {
          "name": "browsing_sessions_user_id_users_id_fk",
          "tableFrom": "browsing_sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "browsing_sessions_device_id_devices_id_fk": {
          "name": "browsing_sessions_device_id_devices_id_fk",
          "tableFrom": "browsing_sessions",
          "tableTo": "devices",
          "columnsFrom": [
            "device_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "browsing_sessions_category_id_waste_categories_id_fk": {
          "name": "browsing_sessions_category_id_waste_categories_id_fk",
          "tableFrom": "browsing_sessions",
          "tableTo": "waste_categories",
          "columnsFrom": [
            "category_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "browsing_sessions_select_own": {
          "name": "browsing_sessions_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"browsing_sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "browsing_sessions_update_own": {
          "name": "browsing_sessions_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"browsing_sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"browsing_sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "browsing_sessions_insert_own": {
          "name": "browsing_sessions_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"browsing_sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "browsing_sessions_delete_own": {
          "name": "browsing_sessions_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"browsing_sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "browsing_sessions_service_role_all": {
          "name": "browsing_sessions_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.devices": {
      "name": "devices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "devices_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "public_id": {
          "name": "public_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "device_type": {
          "name": "device_type",
          "type": "device_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "device_id": {
          "name": "device_id",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "user_agent": {
          "name": "user_agent",
          "type": "varchar(1000)",
          "primaryKey": false,
          "notNull": false
        },
        "platform": {
          "name": "platform",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "device_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "last_seen_at": {
          "name": "last_seen_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "devices_tenant_user_idx": {
          "name": "devices_tenant_user_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "devices_device_type_idx": {
          "name": "devices_device_type_idx",
          "columns": [
            {
              "expression": "device_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "devices_status_idx": {
          "name": "devices_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "devices_is_active_idx": {
          "name": "devices_is_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "devices_last_seen_at_idx": {
          "name": "devices_last_seen_at_idx",
          "columns": [
            {
              "expression": "last_seen_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "devices_tenant_user_device_id_uidx": {
          "name": "devices_tenant_user_device_id_uidx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "device_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "devices_tenant_id_tenants_id_fk": {
          "name": "devices_tenant_id_tenants_id_fk",
          "tableFrom": "devices",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "devices_user_id_users_id_fk": {
          "name": "devices_user_id_users_id_fk",
          "tableFrom": "devices",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "devices_public_id_uidx": {
          "name": "devices_public_id_uidx",
          "nullsNotDistinct": false,
          "columns": [
            "public_id"
          ]
        }
      },
      "policies": {
        "devices_select_own": {
          "name": "devices_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"devices\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "devices_update_own": {
          "name": "devices_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"devices\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"devices\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "devices_insert_own": {
          "name": "devices_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"devices\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "devices_delete_own": {
          "name": "devices_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"devices\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "devices_service_role_all": {
          "name": "devices_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.domains": {
      "name": "domains",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "domains_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "domain": {
          "name": "domain",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "category_id": {
          "name": "category_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "domains_tenant_user_domain_idx": {
          "name": "domains_tenant_user_domain_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "domain",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "domains_domain_idx": {
          "name": "domains_domain_idx",
          "columns": [
            {
              "expression": "domain",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "domains_category_id_idx": {
          "name": "domains_category_id_idx",
          "columns": [
            {
              "expression": "category_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "domains_is_active_idx": {
          "name": "domains_is_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "domains_tenant_id_tenants_id_fk": {
          "name": "domains_tenant_id_tenants_id_fk",
          "tableFrom": "domains",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "domains_user_id_users_id_fk": {
          "name": "domains_user_id_users_id_fk",
          "tableFrom": "domains",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "domains_category_id_waste_categories_id_fk": {
          "name": "domains_category_id_waste_categories_id_fk",
          "tableFrom": "domains",
          "tableTo": "waste_categories",
          "columnsFrom": [
            "category_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "domains_tenant_user_domain_uid": {
          "name": "domains_tenant_user_domain_uid",
          "nullsNotDistinct": false,
          "columns": [
            "tenant_id",
            "user_id",
            "domain"
          ]
        }
      },
      "policies": {
        "domains_select_own": {
          "name": "domains_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"domains\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "domains_update_own": {
          "name": "domains_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"domains\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"domains\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "domains_insert_own": {
          "name": "domains_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"domains\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "domains_delete_own": {
          "name": "domains_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"domains\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "domains_service_role_all": {
          "name": "domains_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.sessions": {
      "name": "sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "device_id": {
          "name": "device_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "start_time": {
          "name": "start_time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "duration_seconds": {
          "name": "duration_seconds",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "session_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "user_state": {
          "name": "user_state",
          "type": "user_state",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "window_title": {
          "name": "window_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "sessions_tenant_user_start_time_idx": {
          "name": "sessions_tenant_user_start_time_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "start_time",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sessions_tenant_user_category_idx": {
          "name": "sessions_tenant_user_category_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "category",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sessions_device_id_idx": {
          "name": "sessions_device_id_idx",
          "columns": [
            {
              "expression": "device_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sessions_identifier_idx": {
          "name": "sessions_identifier_idx",
          "columns": [
            {
              "expression": "identifier",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sessions_tenant_id_tenants_id_fk": {
          "name": "sessions_tenant_id_tenants_id_fk",
          "tableFrom": "sessions",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "sessions_user_id_users_id_fk": {
          "name": "sessions_user_id_users_id_fk",
          "tableFrom": "sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "sessions_device_id_devices_id_fk": {
          "name": "sessions_device_id_devices_id_fk",
          "tableFrom": "sessions",
          "tableTo": "devices",
          "columnsFrom": [
            "device_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "sessions_select_own": {
          "name": "sessions_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "sessions_update_own": {
          "name": "sessions_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "sessions_insert_own": {
          "name": "sessions_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "sessions_delete_own": {
          "name": "sessions_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"sessions\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "sessions_service_role_all": {
          "name": "sessions_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tenants": {
      "name": "tenants",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "tenants_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "public_id": {
          "name": "public_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "tenants_name_idx": {
          "name": "tenants_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "tenants_public_id_uidx": {
          "name": "tenants_public_id_uidx",
          "columns": [
            {
              "expression": "public_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "tenants_select_own": {
          "name": "tenants_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.tenant_id = \"tenants\".\"id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "tenants_service_role_all": {
          "name": "tenants_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_settings": {
      "name": "user_settings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "user_settings_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_settings_tenant_user_idx": {
          "name": "user_settings_tenant_user_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_settings_key_idx": {
          "name": "user_settings_key_idx",
          "columns": [
            {
              "expression": "key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_settings_tenant_id_tenants_id_fk": {
          "name": "user_settings_tenant_id_tenants_id_fk",
          "tableFrom": "user_settings",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "user_settings_user_id_users_id_fk": {
          "name": "user_settings_user_id_users_id_fk",
          "tableFrom": "user_settings",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_settings_tenant_user_key_uid": {
          "name": "user_settings_tenant_user_key_uid",
          "nullsNotDistinct": false,
          "columns": [
            "tenant_id",
            "user_id",
            "key"
          ]
        }
      },
      "policies": {
        "user_settings_select_own": {
          "name": "user_settings_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"user_settings\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "user_settings_update_own": {
          "name": "user_settings_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"user_settings\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"user_settings\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "user_settings_insert_own": {
          "name": "user_settings_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"user_settings\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "user_settings_delete_own": {
          "name": "user_settings_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"user_settings\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "user_settings_service_role_all": {
          "name": "user_settings_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "users_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "public_id": {
          "name": "public_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "auth_user_id": {
          "name": "auth_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "last_login_at": {
          "name": "last_login_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "users_tenant_id_idx": {
          "name": "users_tenant_id_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_idx": {
          "name": "users_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_role_idx": {
          "name": "users_role_idx",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_is_active_idx": {
          "name": "users_is_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_auth_user_id_uidx": {
          "name": "users_auth_user_id_uidx",
          "columns": [
            {
              "expression": "auth_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_uidx": {
          "name": "users_email_uidx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_tenant_id_tenants_id_fk": {
          "name": "users_tenant_id_tenants_id_fk",
          "tableFrom": "users",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_public_id_uidx": {
          "name": "users_public_id_uidx",
          "nullsNotDistinct": false,
          "columns": [
            "public_id"
          ]
        }
      },
      "policies": {
        "users_select_own": {
          "name": "users_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"users\".\"auth_user_id\" = auth.uid()"
        },
        "users_update_own": {
          "name": "users_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"users\".\"auth_user_id\" = auth.uid()",
          "withCheck": "\"users\".\"auth_user_id\" = auth.uid()"
        },
        "users_admin_select_tenant": {
          "name": "users_admin_select_tenant",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users admin_users \n        WHERE admin_users.auth_user_id = auth.uid() \n        AND admin_users.role = 'admin' \n        AND admin_users.tenant_id = \"users\".\"tenant_id\"\n      )"
        },
        "users_service_role_all": {
          "name": "users_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.waste_categories": {
      "name": "waste_categories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "waste_categories_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "waste_category_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "label": {
          "name": "label",
          "type": "waste_label",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "waste_categories_tenant_user_type_idx": {
          "name": "waste_categories_tenant_user_type_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "waste_categories_tenant_user_label_idx": {
          "name": "waste_categories_tenant_user_label_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "label",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "waste_categories_is_active_idx": {
          "name": "waste_categories_is_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "waste_categories_tenant_id_tenants_id_fk": {
          "name": "waste_categories_tenant_id_tenants_id_fk",
          "tableFrom": "waste_categories",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "waste_categories_user_id_users_id_fk": {
          "name": "waste_categories_user_id_users_id_fk",
          "tableFrom": "waste_categories",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "waste_categories_tenant_user_type_identifier_uid": {
          "name": "waste_categories_tenant_user_type_identifier_uid",
          "nullsNotDistinct": false,
          "columns": [
            "tenant_id",
            "user_id",
            "type",
            "identifier"
          ]
        }
      },
      "policies": {
        "waste_categories_select_own": {
          "name": "waste_categories_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"waste_categories\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "waste_categories_update_own": {
          "name": "waste_categories_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"waste_categories\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"waste_categories\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "waste_categories_insert_own": {
          "name": "waste_categories_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"waste_categories\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "waste_categories_delete_own": {
          "name": "waste_categories_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM users \n        WHERE users.id = \"waste_categories\".\"user_id\" \n        AND users.auth_user_id = auth.uid()\n      )"
        },
        "waste_categories_service_role_all": {
          "name": "waste_categories_service_role_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.device_status": {
      "name": "device_status",
      "schema": "public",
      "values": [
        "active",
        "inactive",
        "archived"
      ]
    },
    "public.device_type": {
      "name": "device_type",
      "schema": "public",
      "values": [
        "desktop",
        "mobile",
        "tablet",
        "browser"
      ]
    },
    "public.session_category": {
      "name": "session_category",
      "schema": "public",
      "values": [
        "app",
        "browser",
        "system"
      ]
    },
    "public.user_role": {
      "name": "user_role",
      "schema": "public",
      "values": [
        "admin",
        "member",
        "viewer"
      ]
    },
    "public.user_state": {
      "name": "user_state",
      "schema": "public",
      "values": [
        "active",
        "idle"
      ]
    },
    "public.waste_category_type": {
      "name": "waste_category_type",
      "schema": "public",
      "values": [
        "app",
        "url",
        "system"
      ]
    },
    "public.waste_label": {
      "name": "waste_label",
      "schema": "public",
      "values": [
        "waste",
        "productive"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}